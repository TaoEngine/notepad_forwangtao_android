/// 笔记的数据我采用了一种间歇性加载的方法来
///
/// ### notedown
/// 这个
/// ### noteadd
/// 新增笔迹。当我在画板上开始落笔时，这部分笔迹将会被记录，并在抬笔时终止并将这部分笔迹记为`noteadd`笔迹数据\
/// 顾名思义，`noteadd`包含了笔迹在画板上的位置。此外还有笔迹的粗细，笔迹的颜色等数据被计入其中\
/// **注意**
/// - noteadd部分数据仅仅记录了，目的是方便撤销。
/// - 但是如果对画板中的每一划都列一个`noteadd`作为笔迹的记录那会大大增加每次打开或保存记事本时数据库的读取次数（我这么觉得）导致使用体验下降。
/// - 因此我觉得在每次保存后把所有写过的笔迹封装进`notedown`然后一次性保存效果会更好
/// ### notedel
///
/// ### notemove
///
/// - 首先在
library database;

import '../static/notepad_data.dart';
import 'package:isar/isar.dart';
import 'package:path_provider/path_provider.dart';

Future<void> main(List<dynamic> arguments) async {
  final notepadDir = await getApplicationDocumentsDirectory();
  final notepadDatabase =
      await Isar.open([NotepadSchema], directory: notepadDir.path);
  // CRUD
  final test = NotepadData();

  await notepadDatabase.writeTxn(() async {
    await notepadDatabase.notepadDatas.put(test);
  });
}
